pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages{
      
      stage('Git checkout'){
          steps{
             git branch: 'main', credentialsId: 'Github', url: 'https://github.com/8555936327/Jenkins-pipeline.git'
          }
      }
      
      stage('Build and test'){
          steps{
              sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
          }
      }
      
      stage('Static code analysis'){
          environment {
              SONAR_URL = "http://172.0.20.141:9000"
          }
          
          steps{
              withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                 sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
              }
          }
      }
      
      stage('Build & Push Docker image'){
          steps{
              sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t 8555936327/ultimate-cicd:${BUILD_TAG} .'
             
              withCredentials([string(credentialsId: 'DOCKERHUB_CRED_PASSWD', variable: 'DOCKERHUB_PASSWD')]) {
                  sh 'docker login -u 8555936327 -p $DOCKERHUB_PASSWD'    
                  sh 'docker push 8555936327/ultimate-cicd:${BUILD_TAG}'
              }
          }
      }
          
      stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-pipeline"
            GIT_USER_NAME = "8555936327"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                git config user.email "sbvh1437@gmail.com"
                git config user.name "8555936327"
                BUILD_NUMBER=${BUILD_TAG}
                git checkout jenkins
                sed -i "19c\\        image: 8555936327/ultimate-cicd:${BUILD_TAG}" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_TAG}"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:jenkins
            '''
            }
        }
      }
  }
}
         
          
          
              
  
